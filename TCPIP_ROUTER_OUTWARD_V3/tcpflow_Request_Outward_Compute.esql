PATH com.sb.logging;
DECLARE APP_NAME EXTERNAL CHARACTER '' ;
DECLARE FLOW_NAME EXTERNAL CHARACTER '';
DECLARE dsn_Name EXTERNAL CHARACTER '';
CREATE COMPUTE MODULE tcpip_request_compute
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		 CALL addHeaders();
		RETURN FALSE;
	END;
	CREATE PROCEDURE addHeaders() BEGIN
		DECLARE inRef REFERENCE TO InputLocalEnvironment.TCPIP.Input.ConnectionDetails;
		DECLARE msgid CHARACTER CAST(inRef.SequenceNumber.InputRecord AS CHARACTER)  ||CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmssSSS');
		DECLARE inputChar CHARACTER CAST(ASBITSTREAM(InputRoot.XMLNSC) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);	
		SET OutputRoot.JSON.Data.DBAudit.msgid = msgid;
		SET OutputRoot.JSON.Data.DBAudit.CorrId='';
		SET OutputRoot.JSON.Data.DBAudit.replyId = inRef.Id;
		SET OutputRoot.JSON.Data.DBAudit.TCPIPId = 'TCPIP';
		SET OutputRoot.JSON.Data.DBAudit.Logtype='INFO';
		SET OutputRoot.JSON.Data.DBAudit.AppName=APP_NAME;
		SET OutputRoot.JSON.Data.DBAudit.CompName= 'DB_AUDIT';
		SET OutputRoot.JSON.Data.DBAudit.Message = inputChar;
		SET OutputRoot.JSON.Data.DBAudit.FlowName = FLOW_NAME;
		SET OutputRoot.JSON.Data.DBAudit.clientHostname = inRef.ClientDetails.Hostname;
		SET OutputRoot.JSON.Data.DBAudit.clientIp = inRef.ClientDetails.Address;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'DB_AUDIT_Q';
		PROPAGATE TO TERMINAL 'out1';
			
--		DECLARE msgid2 CHARACTER CAST(msgid AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		-- SET msgid2 = REPLACE(SUBSTRING(msgid2 AFTER 'X'),'''','');
		
		DECLARE outRef REFERENCE TO OutputRoot.MQRFH2.usr;
		SET OutputRoot.MQRFH2.usr.RouterHeader.mesID =msgid;
		SET OutputRoot.MQRFH2.usr.RouterHeader.replyProtocol = 'TCPIP';
		SET OutputRoot.MQRFH2.usr.RouterHeader.replyId =  inRef.Id;
		SET OutputRoot.MQRFH2.usr.RouterHeader.clientHostname =  inRef.ClientDetails.Hostname;
		SET OutputRoot.MQRFH2.usr.RouterHeader.clientIp = inRef.ClientDetails.Address;
		SET OutputRoot.MQRFH2.usr.BusinessFlowHeader 	='';
		 SET Environment.MQRFH2  =OutputRoot.MQRFH2;
		-- DELETE FIELD OutputRoot.MQRFH2;
		
		
--		CALL AUDIT_LOGGING( msgid, '', inRef.Id,InputRoot.Properties.ReplyProtocol,'Info',APP_NAME,'reqPropagation',inputChar,CURRENT_TIMESTAMP,CAST(InputRoot.Properties.CreationTime AS TIMESTAMP),FLOW_NAME) IN Database.STWDDSN.SYSTEM;
		-- SET OutputRoot.DFDL = InputRoot.DFDL;
--		CASE  
--			
--		WHEN InputRoot.DFDL.ISO8583_1987.MTI_Field01 = '0200' THEN
--			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'ISO_TRANS_0200_REQ_Q';
--			SET OutputRoot = InputRoot;	
--		WHEN InputRoot.DFDL.ISO8583_1987.MTI_Field01 = '9220' THEN
--			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'ISO_NOTIF_9220_REQ_Q';
--			SET OutputRoot = InputRoot;	
--			
--			ELSE
			SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'ISO_TRANS_0200_REQ_Q';
			SET OutputRoot = InputRoot;	
--		END CASE;
		
		
	END;
END MODULE;

CREATE COMPUTE MODULE tcpip_exception_compute
	
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
		 CALL excpetionLogging();
		RETURN TRUE;
	END;

	CREATE PROCEDURE excpetionLogging() BEGIN
		
		DECLARE inRef REFERENCE TO InputLocalEnvironment.TCPIP.Input.ConnectionDetails;
		DECLARE msgid CHARACTER CAST(inRef.SequenceNumber.InputRecord AS CHARACTER)  ||CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmssssss');
		DECLARE exeDesc REFERENCE TO Environment.Variables.TraceFileExc.exceptionDesc;
		SET OutputRoot.MQRFH2.usr.RouterHeader.mesID =Environment.MQRFH2.usr.RouterHeader.mesID;
		SET OutputRoot.MQRFH2.usr.RouterHeader.replyProtocol =Environment.MQRFH2.usr.RouterHeader.replyProtocol;
		SET OutputRoot.MQRFH2.usr.RouterHeader.replyId =Environment.MQRFH2.usr.RouterHeader.replyId;
		SET OutputRoot.MQRFH2.usr.RouterHeader.clientHostname =Environment.MQRFH2.usr.RouterHeader.clientHostnam;
		SET OutputRoot.MQRFH2.usr.RouterHeader.clientIp =Environment.MQRFH2.usr.RouterHeader.clientIp;
		-- SET OutputRoot.MQRFH2.usr.BusinessFlowHeader 	='';
		
		-- SET OutputRoot = InputRoot;
		CALL AUDIT_LOGGING( msgid, '', inRef.Id,InputRoot.Properties.ReplyProtocol,'Info',APP_NAME,'reqPropagation',exeDesc,CURRENT_TIMESTAMP,CAST(InputRoot.Properties.CreationTime AS TIMESTAMP),FLOW_NAME) IN Database.STWDDSN.SYSTEM;
--		SET OutputRoot.DFDL.ISO8583_1987.AdditionalResponseData_044 = exeDesc;	
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = 'ISO_NOTIF_9220_REQ_Q';
		SET OutputRoot.DFDL.ISO8583_1987.ReservedPrivate_127 = exeDesc;
--SET OutputRoot.XMLNSC.Data.Details = exeDesc;
	
			
	END;
END MODULE;

CREATE COMPUTE MODULE tcpip_response_compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;



CREATE COMPUTE MODULE tcpip_response_propagation_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;



